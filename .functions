# Create a new directory and enter it
function mkd() {
	mkdir -p "$@" && cd "$_";
}

# Compare original and gzipped file size
function gz() {
	local origsize=$(wc -c < "$1");
	local gzipsize=$(gzip -c "$1" | wc -c);
	local ratio=$(echo "$gzipsize * 100 / $origsize" | bc -l);
	printf "orig: %d bytes\n" "$origsize";
	printf "gzip: %d bytes (%2.2f%%)\n" "$gzipsize" "$ratio";
}

# Run `dig` and display the most useful info
function digga() {
	dig +nocmd "$1" any +multiline +noall +answer;
}

# Wank stuff
wank_mount() {
	local volumePath="$HOME/creeper";

	if [[ -e "$volumePath" ]]; then
		echo "Probably already mounted.";
		return 1;
	fi;

	mkdir "$volumePath";
	sshfs "$(whoami)@wank.no:/nfs/home/$(whoami)" "$volumePath" "-oping_diskarb,volname=creeper"
}

wank_unmount() {
	creeper_unmount;
}

wank() {
	ssh -A wank.no
}

# Creeper stuff
creeper() {
	ssh -A creeper.no
}

creeper_mount() {
	local volumePath="$HOME/creeper";

	if [[ -e "$volumePath" ]]; then
		echo "Probably already mounted.";
		return 1;
	fi;

	mkdir "$volumePath";
	sshfs "$(whoami)@creeper.no:/nfs/home/$(whoami)" "$volumePath" "-oping_diskarb,volname=creeper"
}

creeper_unmount() {
	diskutil unmount "$HOME/creeper" && rmdir "$HOME/creeper";
}

# hal9000
hal() {
	ssh -A ssh.tu.c.bitbit.net
}

# golan
golan() {
	ssh -A golan.tu.c.bitbit.net
}

golan_mount() {
	local volumePath="$HOME/golan";

	if [[ -e "$volumePath" ]]; then
		echo "Probably already mounted.";
		return 1;
	fi;

	mkdir "$volumePath";
	sshfs "$(whoami)@golan.tu.c.bitbit.net:/nfs/home/$(whoami)" "$volumePath" "-oping_diskarb,volname=golan"
}

golan_unmount() {
	diskutil unmount "$HOME/golan" && rmdir "$HOME/golan";
}

# Retry command until success
retry() {
	until "$@";
	do
		sleep 1;
	done;
}

# A
alpha() {
	ssh -A 46.101.237.41
}
